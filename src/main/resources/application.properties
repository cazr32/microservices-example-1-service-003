spring.main.allow-bean-definition-overriding=true

spring.liquibase.enabled=false

# MySQL
spring.jpa.hibernate.ddl-auto=none
spring.datasource.url=jdbc:mysql://46.101.194.224:3306/microservices-example-1-service-001
spring.datasource.username=appuser
spring.datasource.password=appuserpwd20201
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# the name of Camel
#camel.springboot.name = SampleCamel
#endpoints.enabled = true
#endpoints.health.enabled = true

# configure connection to the rabbit mq broker using camel-rabbitmq style
# note you can also configure from Java code, see SampleCamelApplication.java
camel.component.rabbitmq.hostname=46.101.194.224
camel.component.rabbitmq.port-number=5672
camel.component.rabbitmq.username=admin
camel.component.rabbitmq.password=rabbitmqpwd20201

# the options from org.apache.camel.spring.boot.CamelConfigurationProperties can be configured here
camel.springboot.name=MyCamel

# lets listen on all ports to ensure we can be invoked from the pod IP
server.address=0.0.0.0
management.address=0.0.0.0

# lets use a different management port in case you need to listen to HTTP requests on 8080
management.port=8081

# disable all management enpoints except health
endpoints.enabled = true
endpoints.health.enabled = true

#spring.rabbitmq.host=46.101.194.224
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=admin
#spring.rabbitmq.password=rabbitmqpwd20201

logging.path=/customlogs
logging.config = classpath:logback.xml
